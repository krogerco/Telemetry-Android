name: Commit

on: push

env:
  api_level: 29
  commitlint_version: '17'
  conventional_changelog_version: '5'
  java_version: 11
  ktlint_version: '0.46.1'
  node_version: 18
  semantic_release_version: '20'

jobs:
  commit_lint:
    name: Commit Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
        with:
          fetch-depth: 0
      - name: Run Commit Lint
        id: commitlint
        uses: ./.github/actions/commit-lint
        with:
          node_version: ${{ env.node_version }}
          commitlint_version: ${{ env.commitlint_version }}

  code_lint:
    name: Code Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - name: Run ktlint
        id: ktlint
        uses: ./.github/actions/code-lint
        with:
          ktlint_version: ${{ env.ktlint_version }}

  determine_version:
    name: Version Determination
    runs-on: ubuntu-latest
    outputs:
      releaseType: ${{ steps.determine_version.outputs.releaseType }}
      releaseChannel: ${{ steps.determine_version.outputs.releaseChannel }}
      buildVersion: ${{ steps.determine_version.outputs.buildVersion }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - name: Determine Version
        id: determine_version
        uses: ./.github/actions/determine-version
        with:
          node_version: ${{ env.node_version }}
          semantic_release_version: ${{ env.semantic_release_version }}
          conventional_changelog_version: ${{ env.conventional_changelog_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

  build:
    name: Build
    needs: [ commit_lint, code_lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - name: Build
        id: build
        uses: ./.github/actions/build
        with:
          java_version: ${{ env.java_version }}
        env:
          BUILD_VERSION: "${{ needs.determine_version.outputs.buildVersion }}"

  unit_tests:
    name: Unit Tests
    needs: [ commit_lint, code_lint ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - name: Unit Tests
        id: unit_tests
        uses: ./.github/actions/unit-tests
        with:
          java_version: ${{ env.java_version }}

  instrumentation_tests:
    name: Instrumentation Tests
    needs: [ commit_lint, code_lint ]
    runs-on: macos-11
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - name: Run Tests
        id: instrumentation_tests
        uses: ./.github/actions/instrumentation-test
        with:
          java_version: ${{ env.java_version }}
          api_level: ${{ env.api_level }}

  release:
    name: Release
    runs-on: ubuntu-latest
    needs: [ determine_version, build, unit_tests, instrumentation_tests ]
    if: needs.determine_version.outputs.releaseType != ''
    outputs:
      releaseType: ${{ steps.release.outputs.releaseType }}
      releaseChannel: ${{ steps.release.outputs.releaseChannel }}
      buildVersion: ${{ steps.release.outputs.buildVersion }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - name: Release
        id: release
        uses: ./.github/actions/release
        with:
          node_version: ${{ env.node_version }}
          semantic_release_version: ${{ env.semantic_release_version }}
          conventional_changelog_version: ${{ env.conventional_changelog_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}

  publish:
    name: Publication
    runs-on: ubuntu-latest
    needs: release
    if: needs.release.outputs.releaseType != ''
    env:
      RELEASE_TYPE: ${{ needs.release.outputs.releaseType }}
      RELEASE_CHANNEL: ${{ needs.release.outputs.releaseChannel }}
      BUILD_VERSION: ${{ needs.release.outputs.buildVersion }}
    steps:
      - name: Checkout
        uses: actions/checkout@v3.3.0
      - name: Publish
        id: publish
        uses: ./.github/actions/publish
        with:
          java_version: ${{ env.java_version }}
        env:
          GITHUB_TOKEN: ${{ secrets.REPO_ACCESS_TOKEN }}
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.ORG_GRADLE_PROJECT_mavenCentralUsername }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.ORG_GRADLE_PROJECT_mavenCentralPassword }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKey }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyId: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKeyId }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.ORG_GRADLE_PROJECT_signingInMemoryKeyPassword }}
